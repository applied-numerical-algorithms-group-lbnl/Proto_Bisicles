#include "CFInterpMatrixLibrary.H"

// This file is automatically generated by matlab.

CFInterpMatrixLibrary* CFInterpMatrixLibrary::m_singleton = 0;

CFInterpMatrixLibrary* CFInterpMatrixLibrary::createObject()
{
  CFInterpMatrixLibrary* lib = new CFInterpMatrixLibrary();

  lib->add(new CFInterpMatrix<2,2,2,0,0>);
  lib->add(new CFInterpMatrix<2,2,2,1,0>);
  lib->add(new CFInterpMatrix<2,2,2,0,1>);
  lib->add(new CFInterpMatrix<2,2,2,1,1>);
  lib->add(new CFInterpMatrix<2,2,4,0,0>);
  lib->add(new CFInterpMatrix<2,2,4,1,0>);
  lib->add(new CFInterpMatrix<2,2,4,0,1>);
  lib->add(new CFInterpMatrix<2,2,4,1,1>);
  lib->add(new CFInterpMatrix<2,3,2,0,0,0>);
  lib->add(new CFInterpMatrix<2,3,2,1,0,0>);
  lib->add(new CFInterpMatrix<2,3,2,0,1,0>);
  lib->add(new CFInterpMatrix<2,3,2,1,1,0>);
  lib->add(new CFInterpMatrix<2,3,2,0,0,1>);
  lib->add(new CFInterpMatrix<2,3,2,1,0,1>);
  lib->add(new CFInterpMatrix<2,3,2,0,1,1>);
  lib->add(new CFInterpMatrix<2,3,2,1,1,1>);
  lib->add(new CFInterpMatrix<2,3,4,0,0,0>);
  lib->add(new CFInterpMatrix<2,3,4,1,0,0>);
  lib->add(new CFInterpMatrix<2,3,4,0,1,0>);
  lib->add(new CFInterpMatrix<2,3,4,1,1,0>);
  lib->add(new CFInterpMatrix<2,3,4,0,0,1>);
  lib->add(new CFInterpMatrix<2,3,4,1,0,1>);
  lib->add(new CFInterpMatrix<2,3,4,0,1,1>);
  lib->add(new CFInterpMatrix<2,3,4,1,1,1>);
  lib->add(new CFInterpMatrix<3,2,2,0,0>);
  lib->add(new CFInterpMatrix<3,2,2,1,0>);
  lib->add(new CFInterpMatrix<3,2,2,0,1>);
  lib->add(new CFInterpMatrix<3,2,2,1,1>);
  lib->add(new CFInterpMatrix<3,2,4,0,0>);
  lib->add(new CFInterpMatrix<3,2,4,1,0>);
  lib->add(new CFInterpMatrix<3,2,4,0,1>);
  lib->add(new CFInterpMatrix<3,2,4,1,1>);
  lib->add(new CFInterpMatrix<3,3,2,0,0,0>);
  lib->add(new CFInterpMatrix<3,3,2,1,0,0>);
  lib->add(new CFInterpMatrix<3,3,2,0,1,0>);
  lib->add(new CFInterpMatrix<3,3,2,1,1,0>);
  lib->add(new CFInterpMatrix<3,3,2,0,0,1>);
  lib->add(new CFInterpMatrix<3,3,2,1,0,1>);
  lib->add(new CFInterpMatrix<3,3,2,0,1,1>);
  lib->add(new CFInterpMatrix<3,3,2,1,1,1>);
  lib->add(new CFInterpMatrix<3,3,4,0,0,0>);
  lib->add(new CFInterpMatrix<3,3,4,1,0,0>);
  lib->add(new CFInterpMatrix<3,3,4,0,1,0>);
  lib->add(new CFInterpMatrix<3,3,4,1,1,0>);
  lib->add(new CFInterpMatrix<3,3,4,0,0,1>);
  lib->add(new CFInterpMatrix<3,3,4,1,0,1>);
  lib->add(new CFInterpMatrix<3,3,4,0,1,1>);
  lib->add(new CFInterpMatrix<3,3,4,1,1,1>);
  lib->add(new CFInterpMatrix<4,2,2,0,0>);
  lib->add(new CFInterpMatrix<4,2,2,1,0>);
  lib->add(new CFInterpMatrix<4,2,2,2,0>);
  lib->add(new CFInterpMatrix<4,2,2,0,1>);
  lib->add(new CFInterpMatrix<4,2,2,1,1>);
  lib->add(new CFInterpMatrix<4,2,2,2,1>);
  lib->add(new CFInterpMatrix<4,2,2,0,2>);
  lib->add(new CFInterpMatrix<4,2,2,1,2>);
  lib->add(new CFInterpMatrix<4,2,2,2,2>);
  lib->add(new CFInterpMatrix<4,2,4,0,0>);
  lib->add(new CFInterpMatrix<4,2,4,1,0>);
  lib->add(new CFInterpMatrix<4,2,4,2,0>);
  lib->add(new CFInterpMatrix<4,2,4,0,1>);
  lib->add(new CFInterpMatrix<4,2,4,1,1>);
  lib->add(new CFInterpMatrix<4,2,4,2,1>);
  lib->add(new CFInterpMatrix<4,2,4,0,2>);
  lib->add(new CFInterpMatrix<4,2,4,1,2>);
  lib->add(new CFInterpMatrix<4,2,4,2,2>);
  lib->add(new CFInterpMatrix<4,3,2,0,0,0>);
  lib->add(new CFInterpMatrix<4,3,2,1,0,0>);
  lib->add(new CFInterpMatrix<4,3,2,2,0,0>);
  lib->add(new CFInterpMatrix<4,3,2,0,1,0>);
  lib->add(new CFInterpMatrix<4,3,2,1,1,0>);
  lib->add(new CFInterpMatrix<4,3,2,2,1,0>);
  lib->add(new CFInterpMatrix<4,3,2,0,2,0>);
  lib->add(new CFInterpMatrix<4,3,2,1,2,0>);
  lib->add(new CFInterpMatrix<4,3,2,2,2,0>);
  lib->add(new CFInterpMatrix<4,3,2,0,0,1>);
  lib->add(new CFInterpMatrix<4,3,2,1,0,1>);
  lib->add(new CFInterpMatrix<4,3,2,2,0,1>);
  lib->add(new CFInterpMatrix<4,3,2,0,1,1>);
  lib->add(new CFInterpMatrix<4,3,2,1,1,1>);
  lib->add(new CFInterpMatrix<4,3,2,2,1,1>);
  lib->add(new CFInterpMatrix<4,3,2,0,2,1>);
  lib->add(new CFInterpMatrix<4,3,2,1,2,1>);
  lib->add(new CFInterpMatrix<4,3,2,2,2,1>);
  lib->add(new CFInterpMatrix<4,3,2,0,0,2>);
  lib->add(new CFInterpMatrix<4,3,2,1,0,2>);
  lib->add(new CFInterpMatrix<4,3,2,2,0,2>);
  lib->add(new CFInterpMatrix<4,3,2,0,1,2>);
  lib->add(new CFInterpMatrix<4,3,2,1,1,2>);
  lib->add(new CFInterpMatrix<4,3,2,2,1,2>);
  lib->add(new CFInterpMatrix<4,3,2,0,2,2>);
  lib->add(new CFInterpMatrix<4,3,2,1,2,2>);
  lib->add(new CFInterpMatrix<4,3,2,2,2,2>);
  lib->add(new CFInterpMatrix<4,3,4,0,0,0>);
  lib->add(new CFInterpMatrix<4,3,4,1,0,0>);
  lib->add(new CFInterpMatrix<4,3,4,2,0,0>);
  lib->add(new CFInterpMatrix<4,3,4,0,1,0>);
  lib->add(new CFInterpMatrix<4,3,4,1,1,0>);
  lib->add(new CFInterpMatrix<4,3,4,2,1,0>);
  lib->add(new CFInterpMatrix<4,3,4,0,2,0>);
  lib->add(new CFInterpMatrix<4,3,4,1,2,0>);
  lib->add(new CFInterpMatrix<4,3,4,2,2,0>);
  lib->add(new CFInterpMatrix<4,3,4,0,0,1>);
  lib->add(new CFInterpMatrix<4,3,4,1,0,1>);
  lib->add(new CFInterpMatrix<4,3,4,2,0,1>);
  lib->add(new CFInterpMatrix<4,3,4,0,1,1>);
  lib->add(new CFInterpMatrix<4,3,4,1,1,1>);
  lib->add(new CFInterpMatrix<4,3,4,2,1,1>);
  lib->add(new CFInterpMatrix<4,3,4,0,2,1>);
  lib->add(new CFInterpMatrix<4,3,4,1,2,1>);
  lib->add(new CFInterpMatrix<4,3,4,2,2,1>);
  lib->add(new CFInterpMatrix<4,3,4,0,0,2>);
  lib->add(new CFInterpMatrix<4,3,4,1,0,2>);
  lib->add(new CFInterpMatrix<4,3,4,2,0,2>);
  lib->add(new CFInterpMatrix<4,3,4,0,1,2>);
  lib->add(new CFInterpMatrix<4,3,4,1,1,2>);
  lib->add(new CFInterpMatrix<4,3,4,2,1,2>);
  lib->add(new CFInterpMatrix<4,3,4,0,2,2>);
  lib->add(new CFInterpMatrix<4,3,4,1,2,2>);
  lib->add(new CFInterpMatrix<4,3,4,2,2,2>);
  lib->add(new CFInterpMatrix<5,2,2,0,0>);
  lib->add(new CFInterpMatrix<5,2,2,1,0>);
  lib->add(new CFInterpMatrix<5,2,2,2,0>);
  lib->add(new CFInterpMatrix<5,2,2,0,1>);
  lib->add(new CFInterpMatrix<5,2,2,1,1>);
  lib->add(new CFInterpMatrix<5,2,2,2,1>);
  lib->add(new CFInterpMatrix<5,2,2,0,2>);
  lib->add(new CFInterpMatrix<5,2,2,1,2>);
  lib->add(new CFInterpMatrix<5,2,2,2,2>);
  lib->add(new CFInterpMatrix<5,2,4,0,0>);
  lib->add(new CFInterpMatrix<5,2,4,1,0>);
  lib->add(new CFInterpMatrix<5,2,4,2,0>);
  lib->add(new CFInterpMatrix<5,2,4,0,1>);
  lib->add(new CFInterpMatrix<5,2,4,1,1>);
  lib->add(new CFInterpMatrix<5,2,4,2,1>);
  lib->add(new CFInterpMatrix<5,2,4,0,2>);
  lib->add(new CFInterpMatrix<5,2,4,1,2>);
  lib->add(new CFInterpMatrix<5,2,4,2,2>);
  lib->add(new CFInterpMatrix<5,3,2,0,0,0>);
  lib->add(new CFInterpMatrix<5,3,2,1,0,0>);
  lib->add(new CFInterpMatrix<5,3,2,2,0,0>);
  lib->add(new CFInterpMatrix<5,3,2,0,1,0>);
  lib->add(new CFInterpMatrix<5,3,2,1,1,0>);
  lib->add(new CFInterpMatrix<5,3,2,2,1,0>);
  lib->add(new CFInterpMatrix<5,3,2,0,2,0>);
  lib->add(new CFInterpMatrix<5,3,2,1,2,0>);
  lib->add(new CFInterpMatrix<5,3,2,2,2,0>);
  lib->add(new CFInterpMatrix<5,3,2,0,0,1>);
  lib->add(new CFInterpMatrix<5,3,2,1,0,1>);
  lib->add(new CFInterpMatrix<5,3,2,2,0,1>);
  lib->add(new CFInterpMatrix<5,3,2,0,1,1>);
  lib->add(new CFInterpMatrix<5,3,2,1,1,1>);
  lib->add(new CFInterpMatrix<5,3,2,2,1,1>);
  lib->add(new CFInterpMatrix<5,3,2,0,2,1>);
  lib->add(new CFInterpMatrix<5,3,2,1,2,1>);
  lib->add(new CFInterpMatrix<5,3,2,2,2,1>);
  lib->add(new CFInterpMatrix<5,3,2,0,0,2>);
  lib->add(new CFInterpMatrix<5,3,2,1,0,2>);
  lib->add(new CFInterpMatrix<5,3,2,2,0,2>);
  lib->add(new CFInterpMatrix<5,3,2,0,1,2>);
  lib->add(new CFInterpMatrix<5,3,2,1,1,2>);
  lib->add(new CFInterpMatrix<5,3,2,2,1,2>);
  lib->add(new CFInterpMatrix<5,3,2,0,2,2>);
  lib->add(new CFInterpMatrix<5,3,2,1,2,2>);
  lib->add(new CFInterpMatrix<5,3,2,2,2,2>);
  lib->add(new CFInterpMatrix<5,3,4,0,0,0>);
  lib->add(new CFInterpMatrix<5,3,4,1,0,0>);
  lib->add(new CFInterpMatrix<5,3,4,2,0,0>);
  lib->add(new CFInterpMatrix<5,3,4,0,1,0>);
  lib->add(new CFInterpMatrix<5,3,4,1,1,0>);
  lib->add(new CFInterpMatrix<5,3,4,2,1,0>);
  lib->add(new CFInterpMatrix<5,3,4,0,2,0>);
  lib->add(new CFInterpMatrix<5,3,4,1,2,0>);
  lib->add(new CFInterpMatrix<5,3,4,2,2,0>);
  lib->add(new CFInterpMatrix<5,3,4,0,0,1>);
  lib->add(new CFInterpMatrix<5,3,4,1,0,1>);
  lib->add(new CFInterpMatrix<5,3,4,2,0,1>);
  lib->add(new CFInterpMatrix<5,3,4,0,1,1>);
  lib->add(new CFInterpMatrix<5,3,4,1,1,1>);
  lib->add(new CFInterpMatrix<5,3,4,2,1,1>);
  lib->add(new CFInterpMatrix<5,3,4,0,2,1>);
  lib->add(new CFInterpMatrix<5,3,4,1,2,1>);
  lib->add(new CFInterpMatrix<5,3,4,2,2,1>);
  lib->add(new CFInterpMatrix<5,3,4,0,0,2>);
  lib->add(new CFInterpMatrix<5,3,4,1,0,2>);
  lib->add(new CFInterpMatrix<5,3,4,2,0,2>);
  lib->add(new CFInterpMatrix<5,3,4,0,1,2>);
  lib->add(new CFInterpMatrix<5,3,4,1,1,2>);
  lib->add(new CFInterpMatrix<5,3,4,2,1,2>);
  lib->add(new CFInterpMatrix<5,3,4,0,2,2>);
  lib->add(new CFInterpMatrix<5,3,4,1,2,2>);
  lib->add(new CFInterpMatrix<5,3,4,2,2,2>);

  lib->sortMatrices();

  return lib;
}
